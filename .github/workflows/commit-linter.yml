name: Commit Message Linter

on:
  pull_request:
    branches:
      - main
jobs:
  lint-commit-messages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate commit messages
        env:
          COMMIT_REGEX: '^\[JIRA-\d+\] \| (dev|uat|prod|test) \| .+'
        run: |
          echo "Validating commit messages in the pull request..."
          INVALID_COMMITS=0
          # Fetch all commits in the pull request
          PR_COMMITS=$(gh pr view ${{ github.event.pull_request.number }} --json commits --jq '.commits[].oid')
          
          for commit in $PR_COMMITS; do
              COMMIT_MESSAGE=$(git log -1 --pretty=%B $commit)
              echo "Checking commit: $commit"
              echo "Message: $COMMIT_MESSAGE"
              
              # Validate commit message against the regex
              if ! [[ "$COMMIT_MESSAGE" =~ $COMMIT_REGEX ]]; then
                  echo "::error::Invalid commit message format for commit $commit: $COMMIT_MESSAGE"
                  INVALID_COMMITS=$((INVALID_COMMITS + 1))
              fi
          done

          if [[ $INVALID_COMMITS -gt 0 ]]; then
              echo "::error::One or more commit messages do not follow the required format."
              exit 1
          fi
